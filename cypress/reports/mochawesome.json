{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 8,
    "pending": 0,
    "failures": 5,
    "start": "2024-11-13T17:33:03.310Z",
    "end": "2024-11-13T17:33:22.827Z",
    "duration": 19517,
    "testsRegistered": 13,
    "passPercent": 61.53846153846154,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4d92dd6b-56d5-4529-9122-724803188653",
      "title": "",
      "fullFile": "cypress/e2e/api_jokes.cy.js",
      "file": "cypress/e2e/api_jokes.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
          "title": "API de Piadas",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica o formato e os campos da resposta",
              "fullTitle": "API de Piadas Verifica o formato e os campos da resposta",
              "timedOut": null,
              "duration": 1217,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.body).to.have.all.keys('type', 'setup', 'punchline', 'id');\n    cy.log('Todos os campos necessários estão presentes');\n    // Verifica os tipos de dados\n    expect(response.body.type).to.be.a('string');\n    expect(response.body.setup).to.be.a('string');\n    expect(response.body.punchline).to.be.a('string');\n    expect(response.body.id).to.be.a('number');\n    cy.log('Os tipos de dados estão corretos');\n  } catch (error) {\n    cy.log('Erro nos detalhes da resposta da API');\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "2ca93663-3f26-447d-b147-f486a4d0d091",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 1217,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {
                "message": "AssertionError: expected 1018 to be below 500",
                "estack": "AssertionError: expected 1018 to be below 500\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/api_jokes.cy.js:34:42)",
                "diff": "- 1018\n+ 500\n"
              },
              "uuid": "87241e00-2c0c-429b-86c2-985bf4dc3224",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 1078,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {
                "message": "AssertionError: expected 957 to be below 500",
                "estack": "AssertionError: expected 957 to be below 500\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/api_jokes.cy.js:34:42)",
                "diff": "- 957\n+ 500\n"
              },
              "uuid": "aedaff69-043c-489d-86fc-dead3e083e84",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 314,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "4b9cdc30-3193-4bd1-934b-cc7a2239bd7a",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 1105,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {
                "message": "AssertionError: expected 941 to be below 500",
                "estack": "AssertionError: expected 941 to be below 500\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/api_jokes.cy.js:34:42)",
                "diff": "- 941\n+ 500\n"
              },
              "uuid": "62672293-bdc4-4b3b-aff9-e0b46a905d74",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "18f523cf-ffde-41ac-a45a-4092725093bf",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 1106,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {
                "message": "AssertionError: expected 949 to be below 500",
                "estack": "AssertionError: expected 949 to be below 500\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/api_jokes.cy.js:34:42)",
                "diff": "- 949\n+ 500\n"
              },
              "uuid": "bd255a81-3552-4c10-83a8-98f84ca733d1",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 471,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "6bba3687-0912-477f-a3bc-40b5e408ff18",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 281,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "64ae6069-3c52-4c20-8d54-e0d86fdc4c7b",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "59313020-5061-4a8c-b1ba-373347e29f26",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica o tempo de resposta",
              "fullTitle": "API de Piadas Verifica o tempo de resposta",
              "timedOut": null,
              "duration": 296,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request(endpoint).then(response => {\n  try {\n    expect(response.status).to.eq(200);\n    cy.log('Status code é 200');\n    expect(response.duration).to.be.lessThan(500); // Tempo de resposta < 500 ms\n    cy.log(`Tempo de resposta: ${response.duration} ms`);\n  } catch (error) {\n    cy.log(`Tempo de resposta superior ao esperado: ${response.duration} ms`);\n    throw error;\n  }\n});",
              "err": {},
              "uuid": "100d4de4-9f2a-4c4f-9271-3770dece6ea3",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Testes de carga com 10 requisições simultâneas",
              "fullTitle": "API de Piadas Testes de carga com 10 requisições simultâneas",
              "timedOut": null,
              "duration": 7155,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Cria um array de promessas para 10 requisições\nconst requests = Array.from({\n  length: 10\n}, () => cy.request(endpoint));\n// Executa todas as requisições simultaneamente e espera pela resolução\nCypress.Promise.all(requests).then(responses => {\n  responses.forEach((response, index) => {\n    cy.log(`Requisição ${index + 1}: Tempo de resposta - ${response.duration} ms`);\n    expect(response.status).to.eq(200);\n    // Verifica a presença de todos os campos e formato JSON\n    expect(response.body).to.have.all.keys('type', 'setup', 'punchline', 'id');\n    // Verifica se os campos não estão vazios\n    expect(response.body.type).to.not.be.empty;\n    expect(response.body.setup).to.not.be.empty;\n    expect(response.body.punchline).to.not.be.empty;\n    // Verifica os tipos de dados\n    expect(response.body.type).to.be.a('string');\n    expect(response.body.setup).to.be.a('string');\n    expect(response.body.punchline).to.be.a('string');\n    expect(response.body.id).to.be.a('number');\n  });\n});",
              "err": {},
              "uuid": "a847730b-4ecd-4b06-ab80-c0063693b68b",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica unicidade de IDs e integridade dos dados em 100 requisições",
              "fullTitle": "API de Piadas Verifica unicidade de IDs e integridade dos dados em 100 requisições",
              "timedOut": null,
              "duration": 4203,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const ids = new Set();\nfor (let i = 0; i < 100; i++) {\n  cy.request(endpoint).then(response => {\n    expect(response.status).to.eq(200);\n    cy.log(`Requisição ${i + 1}: ID recebido - ${response.body.id}`);\n    // Verifica unicidade do ID\n    expect(ids.has(response.body.id)).to.be.false;\n    ids.add(response.body.id);\n    // Verifica a presença de todos os campos\n    expect(response.body).to.have.all.keys('type', 'setup', 'punchline', 'id');\n    // Verifica se os campos não estão vazios\n    expect(response.body.type).to.not.be.empty;\n    expect(response.body.setup).to.not.be.empty;\n    expect(response.body.punchline).to.not.be.empty;\n    // Verifica tipos de dados\n    expect(response.body.type).to.be.a('string');\n    expect(response.body.setup).to.be.a('string');\n    expect(response.body.punchline).to.be.a('string');\n    expect(response.body.id).to.be.a('number');\n  });\n}",
              "err": {
                "message": "AssertionError: expected true to be false",
                "estack": "AssertionError: expected true to be false\n    at Context.eval (webpack://qa-challenge/./cypress/e2e/api_jokes.cy.js:80:48)",
                "diff": null
              },
              "uuid": "46909c9a-f0a3-4238-a185-abf50f70a7c4",
              "parentUUID": "fbf80995-a855-4ed4-ba05-5a02a4c79f4c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2ca93663-3f26-447d-b147-f486a4d0d091",
            "4b9cdc30-3193-4bd1-934b-cc7a2239bd7a",
            "18f523cf-ffde-41ac-a45a-4092725093bf",
            "6bba3687-0912-477f-a3bc-40b5e408ff18",
            "64ae6069-3c52-4c20-8d54-e0d86fdc4c7b",
            "59313020-5061-4a8c-b1ba-373347e29f26",
            "100d4de4-9f2a-4c4f-9271-3770dece6ea3",
            "a847730b-4ecd-4b06-ab80-c0063693b68b"
          ],
          "failures": [
            "87241e00-2c0c-429b-86c2-985bf4dc3224",
            "aedaff69-043c-489d-86fc-dead3e083e84",
            "62672293-bdc4-4b3b-aff9-e0b46a905d74",
            "bd255a81-3552-4c10-83a8-98f84ca733d1",
            "46909c9a-f0a3-4238-a185-abf50f70a7c4"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}